services:
  api-gateway:
      build:
        context: ./backend/api-gateway
        dockerfile: Dockerfile
      container_name: transcendence-gateway
      ports:
        - "3000:3000"  # Main entry point
      volumes:
        - ./backend/api-gateway:/app
        - /app/node_modules
      environment:
        - NODE_ENV=development
        - PORT=3000
        - JWT_SECRET=${JWT_SECRET:-pingpong-secret-key-change-in-production}
        - USER_SERVICE_URL=http://user-service:3001
      depends_on:
        - user-service
      networks:
        - transcendence-network
      restart: unless-stopped
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: transcendence-auth
    ports:
      - "3001:3001"
    volumes:
      - auth_data:/app/data
      - ./backend/user-service:/app
      - /app/node_modules
  chat-service:
    build:
      context: ./backend/chat-service
      dockerfile: Dockerfile
    container_name: transcendence-chat
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-pingpong-secret-key-change-in-production}
      - DB_PATH=/app/data/auth.db
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_APP_PASSWORD=${EMAIL_APP_PASSWORD}
      - FRONTEND_URL=${FRONTEND_URL}
    networks:
      - transcendence-network
  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    ports:
      - "8080:5174"
    volumes:
      - /app/node_modules
      - ./front-end:/app
    depends_on:
      - api-gateway
    networks:
      - transcendence-network

volumes:
  auth_data:
    driver: local

networks:
  transcendence-network:
    driver: bridge
  
